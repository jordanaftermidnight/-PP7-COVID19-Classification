[metadata]
name = covid19-classification
version = 2.0.0
author = Jordanaftermidnight
description = Advanced Medical AI for COVID-19 Detection
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/jordanaftermidnight/-PP7-COVID19-Classification
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Scientific/Engineering :: Medical Science Apps.

[options]
packages = find:
python_requires = >=3.8
install_requires =
    torch>=1.9.0
    torchvision>=0.10.0
    numpy>=1.21.0
    pandas>=1.3.0
    pillow>=8.3.0
    opencv-python>=4.5.0
    matplotlib>=3.4.0
    seaborn>=0.11.0
    scikit-learn>=1.0.0
    flask>=2.0.0
    streamlit>=1.28.0
    grad-cam>=1.4.0

[options.extras_require]
dev =
    pytest>=6.0
    pytest-cov>=2.12.0
    flake8>=3.9.0
    black>=21.0.0
    safety>=1.10.0
    bandit>=1.7.0

[flake8]
max-line-length = 127
extend-ignore = 
    E203,
    E501,
    W503
exclude =
    .git,
    __pycache__,
    docs/,
    build/,
    dist/,
    *.egg-info/,
    .tox/,
    .venv/,
    venv/,
    .pytest_cache/,
    .coverage,
    htmlcov/

[coverage:run]
source = .
omit = 
    tests/*
    setup.py
    venv/*
    .venv/*
    */site-packages/*
    */dist-packages/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING: